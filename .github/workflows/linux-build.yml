name: Linux Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [self-hosted, Linux, Vulkan]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Print Env
        run: env

      - name: Install vcpkg
        run: external/vcpkg/bootstrap-vcpkg.sh

      - name: Install packages
        run: external/vcpkg/vcpkg install

      - name: Configure CMake Clang Debug
        run: cmake -G "Ninja" -B ${{github.workspace}}/build-clang-dbg -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang-14 -DCMAKE_CXX_COMPILER=clang++-14

      - name: Build Clang Debug
        run: cmake --build ${{github.workspace}}/build-clang-dbg -j

      - name: Configure CMake Clang Release
        run: cmake -G "Ninja" -B ${{github.workspace}}/build-clang-rel -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang-14 -DCMAKE_CXX_COMPILER=clang++-14

      - name: Build Clang Release
        run: cmake --build ${{github.workspace}}/build-clang-rel -j

      - name: Configure CMake GCC Debug
        run: cmake -G "Ninja" -B ${{github.workspace}}/build-gcc-dbg -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-11

      - name: Build GCC Debug
        run: cmake --build ${{github.workspace}}/build-gcc-dbg -j

      - name: Configure CMake GCC Release
        run: cmake -G "Ninja" -B ${{github.workspace}}/build-gcc-rel -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-11

      - name: Build GCC Release
        run: cmake --build ${{github.workspace}}/build-gcc-rel -j
#
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}
#
